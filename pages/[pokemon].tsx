import type { NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";

const Pokemon: NextPage = (props: any) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Pokemons in a list from a public api</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1>{props.pokemon?.name ?? "Not found, please come back later"}</h1>
        {props.pokemon?.sprites && (
          <Image
            src={props.pokemon.sprites.front_default}
            alt={`Image of ${props.pokemon.name}`}
            width={500}
            height={500}
          />
        )}

        <Link href="/">Back</Link>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export async function getStaticPaths() {
  const res = await fetch("https://pokeapi.co/api/v2/pokemon-color/blue");
  const pokemons = await res.json();

  const paths = pokemons.pokemon_species.map((pokemonData: any) => ({
    params: { pokemon: encodeURIComponent(pokemonData.name) },
  }));

  return { paths, fallback: "blocking" };
}

function sleep(ms = 1000) {
  return new Promise((res) => setTimeout(res, ms));
}

export async function avoidRateLimit() {
  await sleep();
}

export async function getStaticProps(props: any) {
  // await avoidRateLimit()
  const res = await fetch(
    `https://pokeapi.co/api/v2/pokemon/${decodeURIComponent(
      props.params.pokemon
    )}`
  );
  // await avoidRateLimit()

  try {
    const pokemon = await res.json();
    return {
      props: {
        pokemon,
      },
    };
  } catch (error) {
    console.log("--------------DEBUG---------------");
    console.log(res);
    console.log(error);
    console.log("--------------DEBUG---------------");
  }

  return {
    props: {
      pokemon: {},
    },
  };
}

export default Pokemon;
